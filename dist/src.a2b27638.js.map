{"version":3,"sources":["src/paddle.js","src/input.js","src/collisionDetection.js","src/ball.js","src/brick.js","src/levels.js","src/game.js","src/index.js"],"names":["Paddle","game","gameWidth","gameHeight","width","height","maxSpeed","speed","position","x","y","context","fillStyle","fillRect","deltaTime","keyCode","InputHandler","paddle","document","addEventListener","event","move","stop","detectCollision","ball","gameObject","ballTop","ballBottom","size","objectTop","objectBottom","objectLeft","objectRight","Ball","image","getElementById","drawImage","paddleTop","paddleLeft","paddleRight","Brick","buildLevel","level","bricks","forEach","row","rowIndex","brick","brickIndex","push","level1","Game","gameObjects","object","update","draw","canvas","getContext","GAME_WIDTH","GAME_HEIGHT","start","lastTime","gameLoop","timestamp","clearRect","requestAnimationFrame"],"mappings":";;AOAA;;;;AAEA,IAAIwD,MAAM,GAAGtC,QAAQ,CAACiB,cAAT,CAAwB,aAAxB,CAAb;AJFA,ADAO,AIAP,ACGA,IAAIxB,KLHYY,EKGL,GAAGiC,MAAM,CAACC,GLHd,CAAyBjC,IAAzB,EAA+BC,AKGxB,CAAkB,IAAlB,CAAd,ILHO,EAA0C;AAC7C,AKIJ,AFLA,IEKMiC,ELJEhC,OAAO,CKIC,ELJGF,CKIA,GLJI,AKIvB,CLJwBhB,QAAL,CAAcE,CAA7B;AACA,AIDJ,ACKA,IAAMiD,ANNe3C,ECEbW,SKIS,CLJC,EKIE,CLJEH,ADDlB,EMKJ,ELJ0B,CAAChB,QAAL,CAAcE,CAAd,GAAkBc,IAAI,ADD5BP,CCC6BW,IAAzC,CDDA,EAAoB;ACGpB,AKIJ,ANPwB,IMOpB3B,ELJI4B,EKIA,GAAG,ILJM,AKIFsB,GLJK1B,UAAU,AKInB,CLJoBjB,AKIXkD,QLJA,CAAoBhD,CAApC,AKIO,EAAqBiD,WAArB,CAAX;ALHI,AIHJ,ACOA1D,IAAI,CAAC2D,CLJG9B,IKIR,QLJoB,GAAGL,UAAU,CAACjB,QAAX,CAAoBE,CAApB,GAAwBe,UAAU,CAACpB,MAAtD;AACA,AKKJ,ANTQa,AIAD,EJACA,EMSJ2C,ELLI9B,GGJQU,CJAA,CAACtB,CMSL,GAAG,CLLG,AKKlB,GLLqBM,AGJd,CAAoBxB,IAApB,EAA0ByC,CJAzB,CAA0B,CCIH,CAAClC,CGJzB,EAAgC,IJA/B,CCIa,CAAoBC,ADJI,CCIzC,SDJ0CW,KAAD,EAAW;ACKpD,AIJJ,ALAYH,AIAR,IDHiBuB,AHGTvB,ADHSjB,EEObgC,AGJAW,IJAU,CAACtB,CIAL,GJAF,AIAK,CJAOD,CCIL,AGJf,GHIkBK,CDJO,CAACV,OAAlB,CCIoB,CAACP,QAAX,CAAoBC,CAApB,GAAwBgB,UAAU,CAACrB,KAArD;AKMJ,ANTS,AICLsC,EAAAA,CJHI,IIGC,CAACE,CEQDkB,MFRL,CAAc,CEQlB,CAAkBC,QFRClB,CEQnB,EAA4B,AFRV,EAAMC,QAAN,EAAmB;AHIjC,AKKA,ANTI5B,AICA2B,EJDA3B,EEHae,AEIbY,EHIAnB,AKIAZ,CFRG,CAAC8B,EJDI,CAACzB,ECKF,EKIE,AFRT,CAAY,CHIDW,CKICiC,QFRChB,CEQQ,ANTrB,CAA0B,CCK1B,CKIwBc,CFRZ,EHKZlC,AGLoBqB,EJDpB,EAAmC,CMSvC,KLHc,AGLE,EAAuB,EHKrBnB,ADNsBT,KAAD,EAAW,ECK9C,IAEAI,IAAI,CAAChB,QAAL,CAAcC,CAAd,IAAmBsB,UAFnB,IAGAP,IAAI,CAAChB,QAAL,CAAcC,CAAd,GAAkBe,IAAI,CAACI,IAAvB,IAA+BI,WAJnC,EAKC;AEbD,AFcI,AKAJ6B,ANTQ5C,AICA,ALNR,EOcA4C,ENTQ5C,MMSA,ANTM,AICH8B,CHQA,ADTIzB,EMSJyC,ELAP,ADTI,AICQ,CJDI3C,CGLRnB,CJAAA,EKMS,CDNrB,AHKyB,AICjB,CEQR,ANT0Bc,ADL1B,CIAkBP,ACMK,CLNN,KCKT,EGLR,EAA2B;AAAA,AFe1B,AKCDG,ANVK,AICO,ALPK,EOgBjBA,CLRA,ADJI,MCYC,AKAE,CAACqD,EFTQxD,OEShB,CAAkB,AFTM,CESxB,EAAqB,AFTM,CES3B,EAAwBkD,UAAxB,EAAoCC,WAApC;AJdA,ADeI,AKCJ1D,ANXC,AICeQ,EEUhBR,IAAI,CAACqD,GFVW7C,CHSL,AGTM,EEUjB,AFVmB,CEUPK,EJhBAb,ADeR,EGToB+C,EFNxB,EAAiB,CIgBjB,KFX2B;AFLV,ACDb,AFiBH,AKCD/C,AFVgBS,ALRZ,EOkBJT,IAAI,CAACsD,EHlBIrD,AJAAA,CKQOQ,CEUhB,AFViB,CEUPC,CFVS,KDRf,ACQoB,ALRpB,COkBJ,EHlBqBV,AJAAA,EKQQ6C,EDRJ,AJAA,CIAC5C,AJAAA,SIAtB,AJAA;AICA,AFiBP,AKEG+D,AFd2B,ALLvB,EOmBJA,OHnBS9D,ACKG,ALLHA,UIAL,AJAA,GIAkBF,AJAAA,COmBD,CAAC6D,EHnBI,AJAA,CIAC3D,AJAAA,KOmBN,CAArB,IHnBI,AJAA;AGCA,ACCA,AGkBP,AFVewC,ALRR,QKQQA,CFTHzC,ACCAD,AJAAG,IIAL,CCQc,ALRd,CKQe6C,CDRHhD,CJAC,CGDb,CESQ,CDRR,ACQoB,ALRpB,CGDiBA,GESOuC,CFT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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export default class Paddle{\r\n    constructor(game){\r\n        this.gameWidth = game.gameWidth;\r\n        this.gameHeight = game.gameHeight;\r\n\r\n        this.width = 150;\r\n        this.height = 20;\r\n\r\n        this.maxSpeed = 7;\r\n        this.speed = 0;\r\n\r\n        this.position = {\r\n            x: this.gameWidth / 2 - this.width / 2,\r\n            y: this.gameHeight - this.height - 10\r\n        };\r\n    }\r\n\r\n    draw(context){\r\n        context.fillStyle = \"#0f0\";\r\n        context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    }\r\n\r\n    update(deltaTime){\r\n        this.position.x += this.speed;\r\n\r\n         if(this.position.x < 0) \r\n            this.position.x = 0;\r\n\r\n         if(this.position.x + this.width > this.gameWidth) \r\n            this.position.x = this.gameWidth - this.width;\r\n    }\r\n\r\n    move(keyCode){\r\n        switch(keyCode){\r\n            case 37:\r\n                this.speed = -this.maxSpeed;\r\n                break;\r\n            case 39:\r\n                this.speed = this.maxSpeed;\r\n                break;                \r\n        }\r\n\r\n    }\r\n\r\n    stop(keyCode){        \r\n        switch(keyCode){\r\n            case 37:\r\n                if(this.speed < 0)\r\n                    this.speed = 0;\r\n                break;\r\n            case 39:\r\n                if(this.speed > 0)\r\n                    this.speed = 0;\r\n                break;                \r\n        }        \r\n    }\r\n}\r\n","export default class InputHandler{\r\n    constructor(paddle) {\r\n        document.addEventListener(\"keydown\", (event) => {\r\n            paddle.move(event.keyCode);\r\n        });\r\n        document.addEventListener(\"keyup\", (event) => {\r\n            paddle.stop(event.keyCode);\r\n        });\r\n    }\r\n     \r\n}","export function detectCollision(ball, gameObject){\r\n    let ballTop  = ball.position.y;\r\n    let ballBottom  = ball.position.y + ball.size;\r\n\r\n    let objectTop = gameObject.position.y;\r\n    let objectBottom = gameObject.position.y + gameObject.height;\r\n    let objectLeft = gameObject.position.x;\r\n    let objectRight = gameObject.position.x + gameObject.width;\r\n\r\n    if(\r\n        ballTop <= objectBottom && \r\n        ballBottom >= objectTop && \r\n        ball.position.x >= objectLeft && \r\n        ball.position.x + ball.size <= objectRight\r\n    ){\r\n        return true;\r\n    } \r\n    else {\r\n        return false;\r\n    }\r\n}","import { detectCollision } from '/src/collisionDetection'\r\n\r\nexport default class Ball{\r\n    constructor(game){\r\n        this.gameWidth = game.gameWidth;\r\n        this.gameHeight = game.gameHeight;\r\n\r\n        this.game = game;\r\n\r\n        this.image = document.getElementById(\"img-ball\");\r\n\r\n        this.position = { x: 10, y: 10 };\r\n        this.speed = { x: 4, y: 2 };\r\n\r\n        this.size = 24;\r\n    }\r\n\r\n    draw(context){\r\n        context.drawImage(\r\n            this.image, \r\n            this.position.x, \r\n            this.position.y, \r\n            this.size, \r\n            this.size\r\n        );\r\n    }\r\n\r\n    update(deltaTime){        \r\n        this.position.x += this.speed.x;\r\n        this.position.y += this.speed.y;\r\n\r\n        if(this.position.x + this.size > this.gameWidth || this.position.x < 0){\r\n            this.speed.x = -this.speed.x;\r\n        }\r\n\r\n        if(this.position.y + this.size > this.gameHeight || this.position.y < 0){\r\n            this.speed.y = -this.speed.y;\r\n        }\r\n\r\n        let ballBottom  = this.position.y + this.size;\r\n        let paddleTop = this.game.paddle.position.y;\r\n        let paddleLeft = this.game.paddle.position.x;\r\n        let paddleRight = this.game.paddle.position.x + this.game.paddle.width;\r\n\r\n        if(detectCollision(this, this.game.paddle)){\r\n            this.speed.y = -this.speed.y;\r\n            this.position.y = this.game.paddle.position.y - this.size;\r\n        }\r\n    }\r\n}","export default class Brick{\r\n    constructor(game, position){\r\n        this.gameWidth = game.gameWidth;\r\n        this.gameHeight = game.gameHeight;\r\n\r\n        this.game = game;\r\n\r\n        this.image = document.getElementById(\"img-brick\");\r\n\r\n        this.position = position;\r\n\r\n        this.width = 60;\r\n        this.height = 32;\r\n    }\r\n\r\n    draw(context){\r\n        context.drawImage(\r\n            this.image, \r\n            this.position.x, \r\n            this.position.y, \r\n            this.width, \r\n            this.height\r\n        );\r\n    }\r\n\r\n    update(deltaTime){        \r\n    }\r\n}","import Brick from '/src/brick'\r\n\r\nexport function buildLevel(game, level){\r\n    let bricks = [];\r\n\r\n    level.forEach((row, rowIndex) => {\r\n        row.forEach((brick, brickIndex) => {\r\n            if(brick === 1){\r\n                let position = {\r\n                    x: 49 * brickIndex,\r\n                    y: 64 + 26 * rowIndex\r\n                };\r\n\r\n                bricks.push(new Brick(game, position));\r\n            }\r\n        });\r\n    });\r\n\r\n    return bricks;\r\n}\r\n\r\nexport const level1 = [\r\n    [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n]","import Paddle from '/src/paddle';\r\nimport InputHandler from '/src/input';\r\nimport Ball from '/src/ball';\r\nimport { buildLevel, level1} from '/src/levels'\r\n\r\nexport default class Game{\r\n    constructor(gameWidth, gameHeight){\r\n        this.gameWidth = gameWidth;\r\n        this.gameHeight = gameHeight;\r\n    }\r\n\r\n    start(){\r\n        this.paddle = new Paddle(this);\r\n        this.ball = new Ball(this);\r\n\r\n        let bricks = buildLevel(this, level1);\r\n\r\n        this.gameObjects = [this.ball, this.paddle, ...bricks];\r\n\r\n        new InputHandler(this.paddle);        \r\n    }\r\n\r\n    update(deltaTime){\r\n        this.gameObjects.forEach((object) => {\r\n            object.update(deltaTime)\r\n        });\r\n    }\r\n\r\n    draw(context){\r\n        this.gameObjects.forEach((object) => {\r\n            object.draw(context)\r\n        });\r\n    }\r\n}","import Game from '/src/game';\r\n\r\nlet canvas = document.getElementById(\"game-screen\");\r\nlet context = canvas.getContext(\"2d\");\r\n\r\nconst GAME_WIDTH = 800;\r\nconst GAME_HEIGHT = 600;\r\n\r\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\r\ngame.start();\r\n\r\nlet lastTime = 0;\r\n\r\nfunction gameLoop(timestamp){\r\n    let deltaTime = timestamp - lastTime;\r\n    lastTime = timestamp;\r\n\r\n    context.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\n    game.update(deltaTime);\r\n    game.draw(context);\r\n\r\n    requestAnimationFrame(gameLoop);\r\n}\r\n\r\nrequestAnimationFrame(gameLoop);\r\n"]}
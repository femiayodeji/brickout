{"version":3,"sources":["src/paddle.js","src/input.js","src/index.js"],"names":["Paddle","gameWidth","gameHeight","width","height","position","x","y","context","fillStyle","fillRect","deltaTime","InputHandler","paddle","document","addEventListener","event","keyCode","alert","canvas","getElementById","getContext","GAME_WIDTH","GAME_HEIGHT","clearRect","draw","lastTime","gameLoop","timestamp","update","requestAnimationFrame"],"mappings":";;AEAA;;AACA;;;;AAEA,IAAImB,MAAM,GAAGL,QAAQ,CAACM,cAAT,CAAwB,aAAxB,CAAb;AACA,IAAIZ,ADJiBI,OCIV,GAAGO,KDHV,CCGgB,CAACE,UAAP,CAAkB,IAAlB,CAAd,IDHgBR,MAAZ,EAAoB;ACKxB,ADLwB,ICKlBS,UAAU,GAAG,GAAnB;AACA,IAAMC,WAAW,GAAG,GAApB;AAEAf,ADPQM,EAAAA,KCOD,CAACU,EDPQ,CAACT,MCOjB,CAAkB,CAAlB,EAAqB,CAArB,EAAwBO,GDPhB,CAA0B,MCOlC,EAAoCC,CDP5B,EAAqC,QCO7C,EDP8CP,KAAD,EAAW;ACSxD,ADRY,ICQRH,AFXiBb,MEWX,EDRSgB,CCQN,IAAIhB,ADRO,CAACiB,OAAb,OCQC,CAAWK,UAAX,EAAuBC,WAAvB,CAAb;AACAV,ADRgB,MCQV,CAACY,IAAP,ADRqB,CCQTjB,CDRI,MCQhB;AAGA,ADVoBU,ICUhBN,IDVgBM,KAAK,CAAC,ICU1B,CAAiBL,CDVQ,CAAL,ICUpB;AAEA,ADXoB,ADLhB,IEgBAa,QAAQ,GAAG,CAAf,EFhBgBzB,SAAZ,EAAuBC,UAAvB,EAAkC;AAAA;AEkBtC,ADZgB,SCYPyB,EDZY,EAAL,ICYhB,CAAkBC,SAAlB,EAA4B;AACxB,ADZgBV,ADNZ,MEkBAP,EDZYO,CDNPf,ICMY,CAAC,ADNlB,CEkBS,EFlBI,CEkBDyB,EFlBZ,CCMiB,CAAL,KCYS,GAAGF,QAA5B;AACAA,ADZgB,ADNZ,EEkBJA,OFlBStB,CEkBD,GAAGwB,EFlBP,GAAc,EAAd,EEkBJ;AAEApB,ADpBQ,ADEJ,EEkBJA,OAAO,AFlBEH,CEkBDmB,OFlBJ,EEkBJ,CAAkB,AFlBE,CEkBpB,EAAqB,CAArB,EAAwBF,UAAxB,EAAoCC,WAApC;AAEAV,ADdK,ADLGP,EEmBRO,CDvBI,GDIIP,CAAC,CEmBH,CAACuB,AFnBI5B,MEmBX,CAAcU,EFnBM,GAAG,CAAZ,GEmBX,AFnB2B,KAAKR,KAAL,GAAa,CADpB;AEqBpBU,ADdC,ADLON,EEmBRM,IFnBQN,CAAC,CEmBH,CAACkB,AFnBIvB,IEmBX,CAAYM,KFnBS,EEmBrB,CFnBwB,KAAKJ,MAAlB,GAA2B;AEqBtC0B,AFvBoB,EEuBpBA,GFvBI,kBEuBiB,CAACH,QAAD,CAArB;AACH,AFpBI;;AEsBLA,QAAQ;;WFpBJ,cAAKnB,OAAL,EAAa;AACTA,MAAAA,OAAO,CAACC,SAAR,GAAoB,MAApB;AACAD,MAAAA,OAAO,CAACE,QAAR,CAAiB,KAAKL,QAAL,CAAcC,CAA/B,EAAkC,KAAKD,QAAL,CAAcE,CAAhD,EAAmD,KAAKJ,KAAxD,EAA+D,KAAKC,MAApE;AACH;;;WAED,gBAAOO,SAAP,EAAiB;AACb,UAAG,CAACA,SAAJ,EAAe;AAClB","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export default class Paddle{\r\n    constructor(gameWidth, gameHeight){\r\n        this.width = 150;\r\n        this.height = 20;\r\n\r\n        this.position = {\r\n            x: gameWidth / 2 - this.width / 2,\r\n            y: gameHeight - this.height - 10\r\n        };\r\n    }\r\n\r\n    draw(context){\r\n        context.fillStyle = \"#0f0\";\r\n        context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    }\r\n\r\n    update(deltaTime){\r\n        if(!deltaTime) return;\r\n    }\r\n}\r\n","export default class InputHandler{\r\n    constructor(paddle) {\r\n        document.addEventListener(\"keydown\", (event) => {\r\n            switch(event.keyCode){\r\n                case 37:\r\n                    alert(\"left\");\r\n                    break;\r\n                case 39:\r\n                    alert(\"right\");\r\n                    break;                \r\n            }\r\n        });\r\n    }\r\n     \r\n}","import Paddle from '/src/paddle';\r\nimport InputHandler from '/src/input';\r\n\r\nlet canvas = document.getElementById(\"game-screen\");\r\nlet context = canvas.getContext(\"2d\");\r\n\r\nconst GAME_WIDTH = 800;\r\nconst GAME_HEIGHT = 600;\r\n\r\ncontext.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\nlet paddle = new Paddle(GAME_WIDTH, GAME_HEIGHT);\r\npaddle.draw(context);\r\n\r\n\r\nnew InputHandler(paddle);\r\n\r\nlet lastTime = 0;\r\n\r\nfunction gameLoop(timestamp){\r\n    let deltaTime = timestamp - lastTime;\r\n    lastTime = timestamp;\r\n\r\n    context.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\n    paddle.update(deltaTime);\r\n    paddle.draw(context);\r\n\r\n    requestAnimationFrame(gameLoop);\r\n}\r\n\r\ngameLoop();\r\n"]}